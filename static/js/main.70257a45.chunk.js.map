{"version":3,"sources":["todolist/TodoListInputFunction.js","todolist/TodoListContentFunction.js","todolist/TodoListFilterFunction.js","todolist/App.js","reportWebVitals.js","index.js"],"names":["TodoListInputWrapper","styled","div","InputFunctions","input","InputButton","button","TodoListInputFunction","value","handleButtonClick","handleInputChange","placeholder","onChange","onClick","TodoListContentFilter","ContentFunctions","Status","Content","props","isDone","Edit","Delete","TodoListContentFunction","todo","handleDeleteTodo","handleToggleDone","id","content","FilterWrapper","FilterFunctions","FilterButton","TodoListFilterFunction","handleFilterAll","handleFilterNotYet","handleFilterDone","handleCleanUp","TodoListWrapper","TodoListTitle","App","React","useState","setValue","todos","setTodos","filter","setFilter","map","className","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0mBAGA,IAAMA,EAAuBC,IAAOC,IAAV,KAIpBC,EAAiBF,IAAOG,MAAV,KAKdC,EAAcJ,IAAOK,OAAV,KAmBFC,MAVf,YAA6E,IAA7CC,EAA4C,EAA5CA,MAAMC,EAAsC,EAAtCA,kBAAkBC,EAAoB,EAApBA,kBAEtD,OACE,eAACV,EAAD,WACE,cAACG,EAAD,CAAgBQ,YAAY,uFAAiBH,MAAOA,EAAOI,SAAUF,IACrE,cAACL,EAAD,CAAaQ,QAAS,kBAAKJ,KAA3B,oC,02BCxBN,IAAMK,EAAwBb,IAAOC,IAAV,KAIrBa,EAAmBd,IAAOC,IAAV,KAKhBc,EAASf,IAAOC,IAAV,KAQNe,EAAUhB,IAAOC,IAAV,KAET,SAAAgB,GAAK,OAAIA,EAAMC,QAAN,6CAIPC,EAAOnB,IAAOK,OAAV,KAOJe,EAASpB,IAAOK,OAAV,KAwBGgB,MAff,YAA4E,IAA1CC,EAAyC,EAAzCA,KAAKC,EAAoC,EAApCA,iBAAiBC,EAAmB,EAAnBA,iBACtD,OACE,cAACX,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAQH,QAAU,WAAOY,EAAiBF,EAAKG,KAA/C,SAAwDH,EAAKJ,OAAO,sBAAO,wBAC3E,cAACF,EAAD,CAASE,OAAQI,EAAKJ,OAAtB,SAA+BI,EAAKI,UACpC,gCACE,cAACP,EAAD,2BACA,cAACC,EAAD,CAAQR,QAAU,WAAOW,EAAiBD,EAAKG,KAA/C,mC,+WC/CV,IAAME,EAAgB3B,IAAOC,IAAV,KAGb2B,EAAkB5B,IAAOC,IAAV,KAEf4B,EAAe7B,IAAOK,OAAV,KAyBHyB,MAbf,YAAsG,IAArEC,EAAoE,EAApEA,gBAAgBC,EAAoD,EAApDA,mBAAmBC,EAAiC,EAAjCA,iBAAiBC,EAAgB,EAAhBA,cACnF,OACE,cAACP,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAcjB,QAASmB,EAAvB,0BACA,cAACF,EAAD,CAAcjB,QAASoB,EAAvB,gCACA,cAACH,EAAD,CAAcjB,QAASqB,EAAvB,gCACA,cAACJ,EAAD,CAAcjB,QAASsB,EAAvB,sC,yXCpBR,IAAMC,EAAkBnC,IAAOC,IAAV,KAQfmC,EAAgBpC,IAAOC,IAAV,KAOfwB,EAAK,EAsFMY,MApFf,WAAgB,IAAD,EAEYC,IAAMC,SAAS,IAF3B,mBAENhC,EAFM,KAEAiC,EAFA,OAGaF,IAAMC,SAAS,CACvC,CAACd,GAAG,EAAGC,QAAQ,MAAOR,QAAO,GAC7B,CAACO,GAAG,EAAGC,QAAQ,qBAAOR,QAAO,KALlB,mBAGNuB,EAHM,KAGCC,EAHD,OAQeJ,IAAMC,SAAS,OAR9B,mBAQNI,EARM,KAQEC,EARF,KA4BPrB,EAAmB,SAAAE,GACvBiB,EAASD,EAAME,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOA,OAGtCD,EAAmB,SAAAC,GACvBiB,EACED,EAAMI,KAAI,SAAAvB,GACV,OAAGA,EAAKG,KAAOA,EAAWH,EACnB,2BACFA,GADL,IAEEJ,QAAQI,EAAKJ,cAqBnB,OACE,qBAAK4B,UAAU,MAAf,SACE,eAACX,EAAD,WACE,cAACC,EAAD,4BACA,cAAC,EAAD,CAAuB5B,kBAjDH,WACX,KAAVD,IACDmC,EAAS,CACP,CACEjB,GAAGA,EACHC,QAAQnB,EACRW,QAAO,IAJH,mBAMHuB,KACHhB,IACFe,EAAS,MAuCsD/B,kBArDzC,SAACsC,GACzBP,EAASO,EAAEC,OAAOzC,UAsDZkC,EAAME,QAAO,SAACrB,GACZ,MAAe,QAAXqB,IAGW,cAAXA,EACMrB,EAAKJ,OAEK,WAAXyB,GACErB,EAAKJ,YADX,MAIN2B,KAAI,SAAAvB,GAAI,OAAI,cAAC,EAAD,CAAuCA,KAAMA,EAAMC,iBAAkBA,EAAkBC,iBAAkBA,GAA3EF,EAAKG,OAElD,cAAC,EAAD,CAAwBM,gBAnCN,WACtBa,EAAU,QAkCoDZ,mBA/BrC,WACzBY,EAAU,WA8B4FX,iBA3B/E,WACvBW,EAAU,cA0BgIV,cAvBtH,WACpBQ,EAAS,aCnEEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70257a45.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nconst TodoListInputWrapper = styled.div`\n  margin-bottom:30px;\n`\n\nconst InputFunctions = styled.input`\n  width:300px;\n  padding:5px;\n  border:0px;\n`\nconst InputButton = styled.button`\n  color:#8C495E;\n  background:#D1D1C2;\n  margin-left:20px;\n  cursor:pointer;\n  outline: none;\n`\n\n\nfunction TodoListInputFunction({value,handleButtonClick,handleInputChange}) {\n\n  return (\n    <TodoListInputWrapper >\n      <InputFunctions placeholder=\"嘿嘿！有什麼要我幫忙記的嗎？\" value={value} onChange={handleInputChange}/>\n      <InputButton onClick={()=> handleButtonClick() } >按我！</InputButton>\n    </TodoListInputWrapper>\n  );\n}\n\nexport default TodoListInputFunction;","import styled from 'styled-components';\n\nconst TodoListContentFilter = styled.div`\n  text-align:center;\n  margin:10px;\n`\nconst ContentFunctions = styled.div`\n  display:flex;\n  justify-content:space-between;\n  padding:5px;\n`\nconst Status = styled.div`\n  color:#8C495E;\n  border:1px solid;\n  font-size:10px;\n  border-radius:3px;\n  cursor: pointer;\n  padding:3px 2px;\n`\nconst Content = styled.div`\n  color:#8C495E;\n  ${props => props.isDone && `\n    text-decoration:line-through;\n  `}\n`\nconst Edit = styled.button`\n  color:#8C495E;\n  background:#D1D1C2;\n  margin-left:20px;\n  cursor:pointer;\n  outline: none;\n`\nconst Delete = styled.button`\n  color:#8C495E;\n  background:#D1D1C2;\n  margin-left:20px;\n  cursor:pointer;\n  outline: none;\n`\n\n\nfunction TodoListContentFunction({todo,handleDeleteTodo,handleToggleDone}) {\n  return (\n    <TodoListContentFilter >\n      <ContentFunctions>\n        <Status onClick={ () => {handleToggleDone(todo.id) }} >{todo.isDone?'已完成!':'待執行!'}</Status>\n        <Content isDone={todo.isDone}>{todo.content}</Content>\n        <div>\n          <Edit>編輯</Edit>\n          <Delete onClick={ () => {handleDeleteTodo(todo.id)} }>刪除</Delete>\n        </div>\n      </ContentFunctions>\n    </TodoListContentFilter>\n  );\n}\n\nexport default TodoListContentFunction;","import styled from 'styled-components';\n\nconst FilterWrapper = styled.div`\n  margin:0px auto;\n`\nconst FilterFunctions = styled.div`\n`\nconst FilterButton = styled.button`\n  background:#74A38C;\n  color:#D1D1C2;\n  margin:10px;\n  cursor:pointer;\n  &:hover {\n    color:white;\n  }\n  outline: none;\n  \n`\n\nfunction TodoListFilterFunction({handleFilterAll,handleFilterNotYet,handleFilterDone,handleCleanUp}) {\n  return (\n    <FilterWrapper>\n      <FilterFunctions>\n        <FilterButton onClick={handleFilterAll}>全部</FilterButton>\n        <FilterButton onClick={handleFilterNotYet}>還沒做</FilterButton>\n        <FilterButton onClick={handleFilterDone}>做完的</FilterButton>\n        <FilterButton onClick={handleCleanUp}>清光光</FilterButton>\n      </FilterFunctions>\n    </FilterWrapper>\n  );\n}\n\nexport default TodoListFilterFunction;\n","import styled from 'styled-components';\nimport React from 'react';\nimport TodoListInputFunction from './TodoListInputFunction.js'\nimport TodoListContentFunction from './TodoListContentFunction.js'\nimport TodoListFilterFunction from './TodoListFilterFunction.js'\n\nconst TodoListWrapper = styled.div`\n  margin:50px auto;\n  background: #D1D1C2;\n  width:450px;\n  border:6px solid #74A38C;\n  text-align:center;\n  box-shadow:5px 10px rgba(0, 0, 0, 0.5);\n`\nconst TodoListTitle = styled.div`\n  color:#8C495E;\n  padding:10px;\n  font-size:30px;\n  font-family:monospace;\n`\n\nlet id = 3\n\nfunction App() {\n\n  const [value,setValue] = React.useState('')\n  const [todos, setTodos] = React.useState([\n    {id:2, content:'abc', isDone:true},\n    {id:1, content:'怎麼辦', isDone:false}\n  ])\n\n  const [filter, setFilter] = React.useState('all')\n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleButtonClick = () => {\n    if(value !== \"\"){\n      setTodos([\n        {\n          id:id,\n          content:value,\n          isDone:false\n        },\n        ...todos])\n        id++\n      setValue('')\n    }\n  }\n  \n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleToggleDone = id => {\n    setTodos(\n      todos.map(todo => {\n      if(todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone:!todo.isDone\n      }\n    }))\n  }\n\n  const handleFilterAll = () => {\n    setFilter('all')\n  }\n\n  const handleFilterNotYet = () => {\n    setFilter('notYet')\n  }\n\n  const handleFilterDone = () => {\n    setFilter('completed')\n  }\n\n  const handleCleanUp = () => {\n    setTodos([])\n  }\n\n  return (\n    <div className=\"App\">\n      <TodoListWrapper>\n        <TodoListTitle>I am TodoList</TodoListTitle>\n        <TodoListInputFunction handleButtonClick={handleButtonClick} handleInputChange={handleInputChange} />\n        {\n          todos.filter((todo) => {\n            if (filter === 'all') {\n              return true\n            }\n            if (filter === 'completed') {\n               return todo.isDone \n            }\n            else if (filter === 'notYet') {\n               return !todo.isDone \n            }\n          })\n          .map(todo => <TodoListContentFunction key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleDone={handleToggleDone}/> )\n        }\n        <TodoListFilterFunction handleFilterAll={handleFilterAll} handleFilterNotYet={handleFilterNotYet} handleFilterDone={handleFilterDone} handleCleanUp={handleCleanUp} />\n      </TodoListWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './todolist/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}